<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f66900be-1a31-4388-bb32-1c9ec9ecebd7" name="Default Changelist" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.15.4" />
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/sdk/go1.15.4/src/runtime/panic.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/vendor/github.com/healthimation/go-env-config/src/client/client.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/sdk/go1.15.4/src/runtime/proc.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/sdk/go1.15.4/src/runtime/asm_amd64.s" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
  </component>
  <component name="RunManager" selected="go build server.go">
    <configuration name="go build server.go" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="<serviceName>" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <envs>
        <env name="ENVIRONMENT" value="local" />
        <env name="SERVICE_MAP" value="{&quot;<serviceName>-db&quot;:&quot;<serviceName>-db:5432&quot;}" />
        <env name="USE_CORS" value="true" />
        <env name="DB_USER" value="&quot;postgres&quot;" />
        <env name="DB_PASSWORD" value="&quot;password&quot;" />
      </envs>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/main/server.go" />
      <package value="github.com/HqOapp/omega" />
      <directory value="$PROJECT_DIR$" />
      <output_directory value="$PROJECT_DIR$/bin/" />
      <method v="2" />
    </configuration>
    <configuration name="remote (docker) debug" type="GoRemoteDebugConfigurationType" factoryName="Go Remote" port="40000">
      <option name="disconnectOption" value="ASK" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile build" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="" />
          <option name="buildCliOptions" value="" />
          <option name="command" value="" />
          <option name="containerName" value="<serviceName>" />
          <option name="entrypoint" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="ENVIRONMENT" />
                <option name="value" value="local" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SERVICE_MAP" />
                <option name="value" value="{&quot;<serviceName>-db&quot;:&quot;<serviceName>-db:5432&quot;}" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="USE_CORS" />
                <option name="value" value="true" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="DB_USER" />
                <option name="value" value="&quot;postgres&quot;" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="DB_PASSWORD" />
                <option name="value" value="&quot;password&quot;" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
              <DockerPortBindingImpl>
                <option name="containerPort" value="40000" />
                <option name="hostPort" value="40000" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="--security-opt=&quot;apparmor=unconfined&quot; --cap-add=SYS_PTRACE" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile.debug" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="" />
          <option name="buildCliOptions" value="" />
          <option name="command" value="" />
          <option name="containerName" value="<serviceName>-debug" />
          <option name="entrypoint" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="ENVIRONMENT" />
                <option name="value" value="local" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SERVICE_MAP" />
                <option name="value" value="{&quot;<serviceName>-db&quot;:&quot;<serviceName>-db:5432&quot;}" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="USE_CORS" />
                <option name="value" value="true" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="DB_USER" />
                <option name="value" value="&quot;postgres&quot;" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="DB_PASSWORD" />
                <option name="value" value="&quot;password&quot;" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
              <DockerPortBindingImpl>
                <option name="containerPort" value="40000" />
                <option name="hostPort" value="40000" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="--security-opt=&quot;apparmor=unconfined&quot; --cap-add=SYS_PTRACE" />
          <option name="sourceFilePath" value="Dockerfile.debug" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Dockerfile build" />
      <item itemvalue="Docker.Dockerfile.debug" />
      <item itemvalue="Go Build.go build server.go" />
      <item itemvalue="Go Remote.remote (docker) debug" />
    </list>
    <recent_temporary />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>